---
import { formatDurationMMSS } from "../lib/utils.ts";
import { formatRankingWithBracket } from "../lib/ranking-utils.ts";

export interface Props {
  player: any;
}

const { player } = Astro.props;

if (!player) {
  return null;
}

// Helper functions for player header
function getRaceId(raceName: string): number {
  const raceIds: Record<string, number> = {
    Human: 1,
    Orc: 2,
    Dwarf: 3,
    "Night Elf": 4,
    Undead: 5,
    Tauren: 6,
    Gnome: 7,
    Troll: 8,
    Goblin: 9,
    "Blood Elf": 10,
    Draenei: 11,
    Worgen: 22,
  };
  return raceIds[raceName] || 1;
}

// Player data processing
const raceId = player.race_id || getRaceId(player.race_name);
const genderId = player.gender === "Female" ? 1 : 0;
const fallbackUrl = `/wow/static/images/2d/avatar/${raceId}-${genderId}.jpg`;
const avatarUrl = player.avatar_url
  ? `${player.avatar_url}?alt=${fallbackUrl}`
  : fallbackUrl;
---

<div class="player-header-horizontal">
  <div class="player-avatar">
    <img src={avatarUrl} alt={`${player.name} avatar`} class="avatar-image" />
  </div>

  <div class="player-info-column">
    <h1
      class={`player-name text-${player.class_name?.toLowerCase() || "common"}`}
    >
      {player.name}
    </h1>
    {
      player.guild_name && (
        <div class="guild-name">&lt;{player.guild_name}&gt;</div>
      )
    }
    <div class="character-details">
      {player.race_name}
      {player.active_spec_name}
      {player.class_name}
    </div>
    <div class="item-level">
      Item Level: {player.equipped_item_level || "-"} equipped / {
        player.average_item_level || "-"
      } average
    </div>
  </div>

  <div class="combined-time-column">
    <div class="stat-label">Combined Time</div>
    <div
      class={`stat-value combined-time-value ${player.global_ranking_bracket ? `bracket-${player.global_ranking_bracket}` : ""}`}
    >
      {
        player.combined_best_time
          ? formatDurationMMSS(player.combined_best_time)
          : "-"
      }
    </div>
  </div>

  <div class="ranking-column">
    <div class="stat-label">Global Rank</div>
    <div
      class="stat-value"
      set:html={formatRankingWithBracket(
        player.global_ranking,
        player.global_ranking_bracket,
      )}
    />
  </div>

  <div class="ranking-column">
    <div class="stat-label">{player.region?.toUpperCase()} Rank</div>
    <div
      class="stat-value"
      set:html={formatRankingWithBracket(
        player.regional_ranking,
        player.regional_ranking_bracket,
      )}
    />
  </div>

  <div class="ranking-column">
    <div class="stat-label">{player.realm_name || player.realm_slug} Rank</div>
    <div
      class="stat-value"
      set:html={formatRankingWithBracket(
        player.realm_ranking,
        player.realm_ranking_bracket,
      )}
    />
  </div>

  <div class="ranking-column">
    <div class="stat-label">Total Runs</div>
    <div class="stat-value">{player.total_runs || 0}</div>
  </div>
</div>

<style>
  .player-profile-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
  }

  .player-header-horizontal {
    background-color: var(--bg-secondary);
    border-radius: 8px;
    padding: 24px;
    margin-bottom: 24px;
    border: 1px solid var(--border-color);
    display: grid;
    grid-template-columns: 80px 300px auto auto auto auto auto;
    gap: 20px;
    align-items: center;
  }

  .player-avatar {
    grid-row: span 4;
  }

  .avatar-image {
    width: 64px;
    height: 64px;
    border-radius: 8px;
    border: 2px solid var(--border-color);
  }

  .player-info-column {
    display: flex;
    flex-direction: column;
    gap: 4px;
    grid-row: span 4;
  }

  .player-name {
    font-size: 1.8em;
    font-weight: bold;
    margin: 0;
    line-height: 1.1;
  }

  .guild-name {
    color: var(--text-secondary);
    font-size: 0.9em;
    margin: 2px 0;
  }

  .character-details {
    color: var(--text-primary);
    font-size: 0.9em;
    margin: 2px 0;
  }

  .item-level {
    color: var(--text-muted);
    font-size: 0.85em;
    margin: 2px 0;
  }

  .combined-time-column,
  .ranking-column {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    min-width: 90px;
  }

  .stat-label {
    color: var(--text-muted);
    font-size: 0.8em;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    margin-bottom: 4px;
  }

  .stat-value {
    font-size: 1.3em;
    font-weight: bold;
    font-family: "Courier New", monospace;
    color: var(--text-primary);
  }

  /* Override stat-value color for Combined Time bracket colors */
  .stat-value.combined-time-value.bracket-artifact {
    color: var(--bracket-artifact) !important;
  }
  .stat-value.combined-time-value.bracket-legendary {
    color: var(--bracket-legendary) !important;
  }
  .stat-value.combined-time-value.bracket-epic {
    color: var(--bracket-epic) !important;
  }
  .stat-value.combined-time-value.bracket-rare {
    color: var(--bracket-rare) !important;
  }
  .stat-value.combined-time-value.bracket-uncommon {
    color: var(--bracket-uncommon) !important;
  }
  .stat-value.combined-time-value.bracket-common {
    color: var(--bracket-common) !important;
  }

  /* Responsive design */
  @media (max-width: 1024px) {
    .player-header-horizontal {
      grid-template-columns: 80px 250px auto auto auto;
      gap: 15px;
    }

    .combined-time-column,
    .ranking-column {
      min-width: 80px;
    }

    .stat-value {
      font-size: 1.1em;
    }
  }

  @media (max-width: 768px) {
    .player-header-horizontal {
      grid-template-columns: 60px 1fr;
      gap: 15px;
      text-align: left;
    }

    .player-avatar {
      grid-row: span 1;
    }

    .avatar-image {
      width: 48px;
      height: 48px;
    }

    .player-info-column {
      grid-row: span 1;
    }

    .combined-time-column,
    .ranking-column {
      grid-column: span 2;
      flex-direction: row;
      justify-content: space-between;
      min-width: auto;
      margin: 8px 0;
      padding: 8px 12px;
      background-color: var(--bg-primary);
      border-radius: 4px;
    }

    .player-name {
      font-size: 1.5em;
    }
  }
</style>
