---
import Navigation from "../components/Navigation.astro";
import Callout from "../components/Callout.astro";
import ItemDatabase from "../components/ItemDatabase.astro";

export interface Props {
  title: string;
  description?: string;
  mode: "rankings" | "comparison";
  class?: string;
  spec?: string;
  comparisonType?: "race" | "trinket" | "both";
}

const {
  title,
  description,
  mode,
  class: fixedClass,
  spec: fixedSpec,
  comparisonType = "both",
} = Astro.props;
const isRankingsMode = mode === "rankings";
const isFixedClassSpec = fixedClass && fixedSpec;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
    <link rel="stylesheet" href="/src/styles/global.css" />
    <link rel="stylesheet" href="/src/styles/components.scss" />
    <style>
      body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
        background-color: var(--bg-primary);
        color: var(--text-primary);
      }

      .page-header {
        text-align: center;
        padding: 30px 20px;
        background-color: var(--bg-secondary);
        border-bottom: 1px solid var(--border-color);
      }

      .page-title {
        color: var(--highlight-color);
        margin: 0 0 10px 0;
        font-size: 2.5em;
        font-weight: 700;
      }

      .page-description {
        color: var(--text-secondary);
        font-size: 1.1em;
        margin: 0;
      }

      .rankings-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
      }



      .controls-grid {
        display: flex;
        gap: 20px;
        flex-wrap: wrap;
      }

      .control-group {
        display: flex;
        flex-direction: column;
        gap: 5px;
      }

      .control-group label {
        font-size: 0.9em;
        color: var(--text-muted);
        font-weight: 500;
        text-transform: uppercase;
        letter-spacing: 0.5px;
      }

      .control-group select {
        padding: 8px 12px;
        background-color: #2a2a2a;
        border: 1px solid #555;
        border-radius: 4px;
        color: var(--text-primary);
        font-size: 0.9em;
        min-width: 120px;
      }

      .control-group select:focus {
        outline: none;
        border-color: var(--highlight-color);
      }

      .loading,
      .error {
        text-align: center;
        padding: 20px;
        margin: 20px 0;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: #2a2a2a;
        border-radius: 8px;
        z-index: 1000;
        min-width: 200px;
      }

      .loading {
        color: var(--text-muted);
        border: 1px solid var(--border-color);
      }

      .error {
        color: var(--highlight-color);
        background-color: #3a2a2a;
        border: 1px solid var(--highlight-color);
      }

      #metadata-container {
        min-height: 120px;
        transition: opacity 0.2s ease;
      }

      #chart-container {
        min-height: 400px;
        transition: opacity 0.2s ease;
      }

      .hidden {
        display: none;
      }

      @media (max-width: 768px) {
        .rankings-container {
          padding: 10px;
        }
      }
    </style>
    <style is:global>






      .chart-bars {
        display: flex;
        flex-direction: column;
        gap: 8px;
      }

      .chart-item {
        display: grid;
        grid-template-columns: 180px 1fr;
        align-items: center;
        gap: 15px;
        padding: 8px 0;
        cursor: pointer;
        border-radius: 4px;
        transition: background-color 0.2s ease;
      }

      .chart-item:hover {
        background-color: rgba(255, 255, 255, 0.05);
      }

      .chart-labels {
        display: flex;
        align-items: center;
        gap: 10px;
        min-width: 120px;
        max-width: 180px;
        flex-shrink: 0;
        overflow: hidden;
      }

      .chart-rank {
        font-size: 0.9em;
        color: var(--text-muted);
        font-weight: 600;
        min-width: 30px;
      }

      .chart-label {
        font-weight: 600;
        color: var(--text-primary);
        text-transform: capitalize;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        flex: 1;
      }

      .trinket-icon {
        width: 20px;
        height: 20px;
        border-radius: 3px;
        margin-right: 8px;
        vertical-align: middle;
        border: 1px solid rgba(255, 255, 255, 0.2);
      }

      .trinket-ilvl {
        font-weight: 600;
        color: var(--text-primary);
        vertical-align: middle;
      }

      .chart-bar-container {
        display: flex;
        align-items: center;
        flex: 1;
        gap: 10px;
        min-width: 0;
      }

      .chart-bar-track {
        flex: 1;
        height: 20px;
        background-color: rgba(255, 255, 255, 0.1);
        border-radius: 3px;
        position: relative;
        min-width: 0;
      }

      .chart-bar {
        height: 100%;
        border-radius: 3px;
        min-width: 2px;
        transition: width 0.3s ease;
        position: relative;
      }

      .chart-value {
        font-weight: 600;
        color: var(--text-primary);
        font-size: 0.9em;
        width: 70px;
        text-align: right;
        flex-shrink: 0;
      }

      /* Expandable chart item styles */
      .chart-item-wrapper {
        border-radius: 6px;
        transition: background-color 0.2s ease;
      }

      .chart-item-header {
        cursor: pointer;
        padding: 8px 12px;
        border-radius: 6px;
        transition: background-color 0.2s ease;
      }

      .chart-item-header:hover {
        background-color: rgba(255, 255, 255, 0.05);
      }

      .chart-item-expanded .chart-item-header {
        background-color: rgba(255, 255, 255, 0.08);
      }

      .chart-item-content {
        display: grid;
        grid-template-columns: 180px 1fr;
        align-items: center;
        gap: 15px;
      }

      .chart-expand-icon {
        margin-left: 8px;
        font-size: 0.8em;
        color: var(--text-muted);
        transition: transform 0.2s ease;
        user-select: none;
      }

      .chart-item-expanded .chart-expand-icon {
        transform: rotate(90deg);
      }

      .chart-dropdown {
        grid-column: 1 / -1;
        margin-top: 12px;
        padding: 16px;
        background-color: var(--bg-selection);
        border-radius: 6px;
        border: 1px solid rgba(255, 255, 255, 0.1);
        display: none;
      }

      .chart-item-expanded .chart-dropdown {
        display: block;
        animation: dropdown-expand 0.2s ease-out;
      }

      @keyframes dropdown-expand {
        from {
          opacity: 0;
          transform: translateY(-8px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      .loadout-section {
        margin-bottom: 20px;
      }

      .loadout-section:last-child {
        margin-bottom: 0;
      }

      .loadout-title {
        color: var(--highlight-color);
        font-size: 1em;
        font-weight: 600;
        margin-bottom: 8px;
        display: flex;
        align-items: center;
        gap: 8px;
      }

      .loadout-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 12px;
      }

      .loadout-item {
        display: flex;
        flex-direction: column;
        gap: 3px;
      }

      .loadout-label {
        font-size: 0.8em;
        color: var(--text-muted);
        font-weight: 500;
        text-transform: uppercase;
        letter-spacing: 0.5px;
      }

      .loadout-value {
        font-size: 0.9em;
        color: var(--text-primary);
        font-weight: 500;
      }

      .loadout-talents {
        font-family: "Courier New", monospace;
        font-size: 1.1em;
        letter-spacing: 2px;
        color: var(--highlight-color);
      }

      .loadout-actions {
        display: flex;
        gap: 12px;
        margin-top: 16px;
        padding-top: 16px;
        border-top: 1px solid rgba(255, 255, 255, 0.1);
      }

      .loadout-button {
        padding: 6px 12px;
        background-color: var(--bg-primary);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 4px;
        color: var(--text-primary);
        text-decoration: none;
        font-size: 0.85em;
        font-weight: 500;
        transition: all 0.2s ease;
        cursor: pointer;
      }

      .loadout-button:hover {
        background-color: rgba(255, 255, 255, 0.1);
        border-color: var(--highlight-color);
      }

      .wowsim-button {
        background-color: var(--bg-primary);
        border-color: var(--border-color);
        color: var(--text-primary);
        margin-bottom: 12px;
        display: block;
        max-width: 200px;
        text-align: center;
        font-weight: bold;
      }

      .wowsim-button:hover {
        background-color: var(--bg-selection);
        border-color: var(--highlight-color);
        color: var(--highlight-color);
      }

      .equipment-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 8px;
      }

      .equipment-slot {
        padding: 8px;
        background-color: rgba(255, 255, 255, 0.02);
        border-radius: 4px;
        border: 1px solid rgba(255, 255, 255, 0.05);
        margin-bottom: 8px;
      }

      .equipment-slot-header {
        margin-bottom: 6px;
      }

      .equipment-slot-name {
        color: var(--text-muted);
        font-weight: 500;
        font-size: 0.8em;
        text-transform: uppercase;
        letter-spacing: 0.5px;
      }

      .equipment-item-tooltip {
        color: #fff;
        font-size: 13px;
        line-height: 1.4;
      }

      .equipment-item-header {
        display: flex;
        align-items: flex-start;
        gap: 8px;
      }

      .equipment-item-link {
        color: #fff;
        text-decoration: none;
        font-weight: bold;
        font-size: 14px;
        display: block;
        margin-bottom: 4px;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);
        transition: color 0.2s ease;
      }

      .equipment-item-link:hover {
        text-decoration: underline;
      }

      .equipment-item-info {
        flex: 1;
      }

      .equipment-item-details {
        margin-top: 4px;
      }

      .item-tooltip-details {
        margin-top: 8px;
      }

      .equipment-detail {
        color: #40ff40;
        font-size: 12px;
        margin-bottom: 2px;
        line-height: 1.3;
        font-weight: 500;
      }

      .equipment-icon {
        width: 24px;
        height: 24px;
        border-radius: 3px;
        flex-shrink: 0;
        border: 1px solid #444;
      }

      .item-level {
        color: #fff;
        font-weight: 500;
        margin: 2px 0;
      }

      .item-reforge {
        color: #40ff40;
        font-weight: 500;
        margin: 2px 0;
      }

      .gem-line {
        display: flex;
        align-items: center;
        gap: 6px;
        margin: 2px 0;
      }

      .gem-icon-inline {
        width: 16px;
        height: 16px;
        border-radius: 2px;
        flex-shrink: 0;
      }

      .gem-stats-white {
        color: #fff;
        font-weight: 500;
      }

      .item-enchant {
        color: #40ff40;
        font-weight: 500;
        margin: 2px 0;
      }

      .talents-list {
        display: flex;
        flex-direction: column;
        gap: 4px;
      }

      .talent-line {
        display: flex;
        align-items: center;
        gap: 6px;
      }

      .talent-icon-inline {
        width: 16px;
        height: 16px;
        border-radius: 2px;
        flex-shrink: 0;
      }

      .talent-name {
        color: #fff;
        font-weight: bold;
        font-size: 14px;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);
      }

      .talent-link {
        color: #fff;
        font-weight: bold;
        font-size: 14px;
        text-decoration: none;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);
        transition: color 0.2s ease;
      }

      .talent-link:hover {
        text-decoration: underline;
      }

      .glyphs-list {
        display: flex;
        flex-direction: column;
        gap: 4px;
      }

      .glyph-line {
        display: flex;
        align-items: center;
        gap: 6px;
      }

      .glyph-icon-inline {
        width: 16px;
        height: 16px;
        border-radius: 2px;
        flex-shrink: 0;
      }

      .glyph-name {
        color: #fff;
        font-weight: bold;
        font-size: 14px;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);
      }

      .glyph-link {
        color: #fff;
        font-weight: bold;
        font-size: 14px;
        text-decoration: none;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);
        transition: color 0.2s ease;
      }

      .glyph-link:hover {
        text-decoration: underline;
      }

      .equipment-item {
        color: var(--text-primary);
        text-align: right;
        font-family: "Courier New", monospace;
      }

      .equipment-icon,
      .consumable-icon {
        width: 24px;
        height: 24px;
        border-radius: 3px;
        margin-right: 8px;
        vertical-align: middle;
        border: 1px solid rgba(255, 255, 255, 0.2);
      }

      .equipment-item-header,
      .consumable-item-header {
        display: flex;
        align-items: center;
        gap: 8px;
      }

 


      /* Glyph-specific styling */
      .consumable-item-header img {
        flex-shrink: 0;
      }

      /* Better spacing for talents and glyphs section */
      .loadout-section .loadout-grid {
        gap: 16px;
      }

      .loadout-section .loadout-item {
        padding: 8px;
        background-color: rgba(255, 255, 255, 0.02);
        border-radius: 4px;
        border: 1px solid rgba(255, 255, 255, 0.05);
      }

      .loadout-notice {
        background-color: rgba(255, 193, 7, 0.1);
        border: 1px solid rgba(255, 193, 7, 0.3);
        border-radius: 4px;
        padding: 12px;
        margin-bottom: 16px;
        color: #ffc107;
        font-size: 0.9em;
        line-height: 1.4;
      }

      .loadout-notice strong {
        color: #ffca28;
      }
    </style>
  </head>
  <body>
    <Navigation />
    <div class="page-header">
      <h1 class="page-title">{title}</h1>
      {description && <p class="page-description">{description}</p>}
    </div>

    <div class="rankings-container">
      <Callout type="warning">
        <p>
          These benchmarks are built with <a
            href="https://wowsims.com/mop"
            target="_blank"
            rel="noopener noreferrer">wowsims</a
          > which is currently still in <strong>alpha</strong> with bug fixes and
          updates coming daily.
        </p>
        <p>
          Beyond that, there are a number of issues with using simulation
          rankings to guide your decisions:
        </p>
        <ul>
          <li>
            <strong>Simulation Bias</strong>: Certain specs are favoured in
            stationary, target dummy scenarios, e.g., Arcane & Boomkin
          </li>
          <li>
            <strong>Fight Length Impact</strong>: In a 5:00 encounter, a 3:00
            burst spec will be unfavoured compared to a 3:30 fight
          </li>
          <li>
            <strong>Incomplete APLs/spec implementation</strong>: Not all specs
            have been optimized for every type of encounters (short duration,
            high target count)
          </li>
        </ul>
        <p>
          Simulation rankings, such as these, should never be used as anything
          more than a novelty/something interesting to look at.
        </p>
      </Callout>

      <div id="metadata-container"></div>

      <div id="trinket-callout" class="hidden">
        <Callout type="note">
          <p>
            <em>Trinket rankings are still a work-in-progress.</em>
          </p>
          <p><strong>Current Implementation</strong>:</p>
          <p>
            We take the selected phase's bis profile gearset, remove the
            trinkets, and simulate to get the <strong>baseline</strong> result. We
            then generate a gearset for each trinket and compare the results against
            the baseline.
          </p>
          <p>
            This implementation comes with some caveats that can scew the
            results:
          </p>
          <ul>
            <li>
              We <strong>don't</strong> re-reforge the gearset for every trinket
            </li>
            <li>
              Ideally every trinket would come with it's own optimized gearset
            </li>
            <li>
              This is simulating the trinkets <strong>individually</strong>, not
              in pairs
            </li>
            <li>
              Like all other simulations, keep in mind WoWSims is still in <strong
                >alpha</strong
              > so not all spec/trinket implementations are complete
            </li>
          </ul>
          <p>
            With all that in mind, you should only consider this list as a <em
              >rough approximation</em
            > of the value of each individual trinket.
          </p>
          <p>
            In the future we will reforge the gearset for each trinket to get a
            more accurate value.
          </p>
        </Callout>
      </div>

      <div class="card">
        <h3 class="card-title">
          {
            isRankingsMode
              ? "Simulation Options"
              : isFixedClassSpec
                ? "Simulation Options"
                : "Comparison Options"
          }
        </h3>
        <div class="controls-grid">
          {
            !isRankingsMode &&
              comparisonType === "both" &&
              !isFixedClassSpec && (
                <div class="control-group">
                  <label for="comparisonType">Compare:</label>
                  <select id="comparisonType">
                    <option value="trinket">Trinkets</option>
                    <option value="race">Races</option>
                  </select>
                </div>
              )
          }

          {
            !isRankingsMode && !isFixedClassSpec && (
              <>
                <div class="control-group">
                  <label for="class">Class:</label>
                  <select id="class">
                    <option value="">Select Class</option>
                    <option value="death_knight">Death Knight</option>
                    <option value="druid">Druid</option>
                    <option value="hunter">Hunter</option>
                    <option value="mage">Mage</option>
                    <option value="monk">Monk</option>
                    <option value="paladin">Paladin</option>
                    <option value="priest">Priest</option>
                    <option value="rogue">Rogue</option>
                    <option value="shaman">Shaman</option>
                    <option value="warlock">Warlock</option>
                    <option value="warrior">Warrior</option>
                  </select>
                </div>

                <div class="control-group">
                  <label for="spec">Specialization:</label>
                  <select id="spec" disabled>
                    <option value="">Select Class First</option>
                  </select>
                </div>
              </>
            )
          }

          <div class="control-group">
            <label for="targetCount">Target Count:</label>
            <select id="targetCount">
              <option value="single">Single Target</option>
              <option value="three">3 Targets</option>
              <option value="cleave">Cleave (2)</option>
              <option value="ten">10 Targets</option>
            </select>
          </div>

          <div class="control-group">
            <label for="encounterType">Encounter:</label>
            <select id="encounterType">
              <option value="raid">Raid</option>
            </select>
          </div>

          <div class="control-group">
            <label for="duration">Duration:</label>
            <select id="duration">
              <option value="long">Long (5 min)</option>
              <option value="short">Short (2 min)</option>
              <option value="burst">Burst (30s)</option>
            </select>
          </div>

          <div class="control-group">
            <label for="phase">Phase:</label>
            <select id="phase">
              <option value="p1">Phase 1</option>
              <option value="preRaid">Pre-Raid</option>
            </select>
          </div>

          <div class="control-group">
            <label for="sortBy">Sort By:</label>
            <select id="sortBy">
              <option value="percent">Average Percentage Increase</option>
              <option value="dps">Average DPS</option>
              <option value="max">Max DPS</option>
              <option value="min">Min DPS</option>
              <option value="stdev">Consistency (Low StdDev)</option>
            </select>
          </div>
        </div>
      </div>

      <div id="loading" class="loading hidden">
        {
          isRankingsMode
            ? "Loading rankings data..."
            : "Loading comparison data..."
        }
      </div>
      <div id="error" class="error hidden"></div>

      <div id="chart-container" class="card"></div>
    </div>

    <script type="module" is:inline define:vars={{ mode, fixedClass, fixedSpec, comparisonType }}>
      import { initializeChart } from "/src/scripts/chart-logic.js";
      initializeChart({ mode, fixedClass, fixedSpec, comparisonType });
    </script>

    <!-- item database component for reforge data and item utilities -->
    <ItemDatabase />
  </body>
</html>
