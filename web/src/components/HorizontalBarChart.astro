---
export interface ChartItem {
  label: string;
  sublabel?: string;
  value: number;
  category: string;
}

export interface Props {
  items: ChartItem[];
  title?: string;
  valueFormatter?: (value: number) => string;
  categoryColors?: Record<string, string>;
}

const { 
  items, 
  title,
  valueFormatter = (value: number) => Math.round(value).toLocaleString(),
  categoryColors = {}
} = Astro.props;

// Sort items by value descending
const sortedItems = [...items].sort((a, b) => b.value - a.value);
const maxValue = sortedItems[0]?.value || 1;
const maxSqrt = Math.sqrt(maxValue);

// Default WoW class colors
const defaultColors = {
  druid: '#ff7c0a',
  hunter: '#aad372', 
  mage: '#3fc7eb',
  monk: '#00ff98',
  paladin: '#f48cba',
  priest: '#ffffff',
  rogue: '#fff468',
  shaman: '#0070dd',
  warlock: '#8788ee',
  warrior: '#c69b6d',
  death_knight: '#C41E3A'
};

const colors = { ...defaultColors, ...categoryColors };
---

<div class="chart-container">
  {title && <h2 class="chart-title">{title}</h2>}
  <div class="chart">
    {sortedItems.map((item, index) => {
      // Use power scaling to amplify visual differences (cube the ratio for more dramatic effect)
      const linearRatio = item.value / maxValue;
      const barWidth = Math.pow(linearRatio, 3) * 100;
      const formattedValue = valueFormatter(item.value);
      const color = colors[item.category] || '#007bff';
      
      return (
        <div class="chart-item">
          <div class="rank-number">#{index + 1}</div>
          <div class="item-info">
            <div class="item-label">{item.label}</div>
            {item.sublabel && <div class="item-sublabel">{item.sublabel}</div>}
          </div>
          <div class="bar-container">
            <div 
              class="bar" 
              style={`width: ${barWidth}%; background-color: ${color};`}
            ></div>
          </div>
          <div class="item-value">{formattedValue}</div>
        </div>
      );
    })}
  </div>
</div>

<style is:global>
  .chart-container {
    width: 100%;
  }
  
  .chart-title {
    text-align: center;
    margin-bottom: 20px;
    color: #f0c040;
    font-size: 1.5em;
  }
  
  .chart {
    background-color: #2d2d2d;
    border-radius: 8px;
    padding: 20px;
  }

  .chart-item {
    display: flex;
    align-items: center;
    margin-bottom: 12px;
    padding: 8px;
    background-color: #3a3a3a;
    border-radius: 4px;
  }
  
  .rank-number {
    width: 30px;
    font-weight: bold;
    color: #f0c040;
    flex-shrink: 0;
  }
  
  .item-info {
    width: 200px;
    display: flex;
    flex-direction: column;
    flex-shrink: 0;
  }
  
  .item-label {
    font-weight: bold;
    text-transform: capitalize;
  }
  
  .item-sublabel {
    font-size: 0.8em;
    color: #aaaaaa;
    text-transform: capitalize;
  }
  
  .bar-container {
    flex: 1;
    margin: 0 15px;
    height: 24px;
    background-color: #555555;
    border-radius: 12px;
    overflow: hidden;
    position: relative;
  }
  
  .bar {
    height: 100%;
    border-radius: 12px;
    min-width: 2px;
    transition: width 0.3s ease;
  }
  
  .item-value {
    width: 80px;
    text-align: right;
    font-weight: bold;
    flex-shrink: 0;
  }
</style>
